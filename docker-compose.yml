version: "3.8"

services:
  authenticationapiservice:
    build:
      context: .
      dockerfile: back/Proyecto.AuthenticationApi.Solution/AuthenticationApi.Presentation/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5000
    networks:
      - my_network
    restart: on-failure

  subjectsapiservice:
    build:
      context: .
      dockerfile: back/Proyecto.SubjectsApi.Solution/SubjectsApi.Presentation/Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5001
    networks:
      - my_network
    restart: on-failure

  scheduleapiservice:
    build:
      context: .
      dockerfile: back/Proyecto.ScheduleApi.Solution/ScheduleApi.Presentation/Dockerfile
    ports:
      - "5002:5002"
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5002
    networks:
      - my_network
    restart: on-failure

  classroomapiservice: 
    build:
      context: .
      dockerfile: back/Proyecto.ClassroomApi.Solution/ClassroomApi.Presentation/Dockerfile
    ports:
      - "5004:5004"  
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5004  
    networks:
      - my_network
    restart: on-failure

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Lancort20+12"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
    networks:
      - my_network
    
  frontend:
    container_name: dockerwdb-frontend
    build:
      context: ./front/gestionescolarfront
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - authenticationapiservice
    networks:
      - my_network
    restart: always

networks:
  my_network:
    driver: bridge

volumes:
  sqlvolume:
